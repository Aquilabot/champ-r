name: ðŸ˜¼ Test Build

on:
  push:
    branches:
      - master
      - build
  pull_request:
    branches:
      - master

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
        cache: 'npm'

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Build
      shell: pwsh
      run: |
        yarn install --silent
        yarn build:ci
        $sha = (git rev-parse --short HEAD)

    - name: Move artifacts
      id: vars
      shell: pwsh
      run: |
        $sha = (git rev-parse --short HEAD)
        md -p ./dist/artifacts
        Copy-Item ./dist/*.exe -Destination ./dist/artifacts/
        Copy-Item ./dist/*.deb -Destination ./dist/artifacts/
        Copy-Item ./dist/*.tar.gz -Destination ./dist/artifacts/
        $file = Get-ChildItem -Path ./dist/artifacts/ -Filter "*.exe" | select-object -first 1
        $newName = "$($file.BaseName).$($sha)$($file.Extension)"
        Rename-Item -Path $file.FullName -NewName $newName
        echo "::set-output name=fileName::$($newName)"
        $file = Get-ChildItem -Path ./dist/artifacts/ -Filter "*.deb" | select-object -first 1
        $newName = "$($file.BaseName).$($sha)$($file.Extension)"
        Rename-Item -Path $file.FullName -NewName $newName
        echo "::set-output name=fileName::$($newName)"
        $file = Get-ChildItem -Path ./dist/artifacts/ -Filter "*.tar.gz" | select-object -first 1
        $newName = "$($file.BaseName).$($sha)$($file.Extension)"
        Rename-Item -Path $file.FullName -NewName $newName
        echo "::set-output name=fileName::$($newName)"

    - name: Upload artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: ${{ steps.vars.outputs.fileName }}
        path: "./dist/artifacts"
