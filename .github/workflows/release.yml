name: Release Build

on:
  push:
    tags:
      - 'v*'

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'yarn'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install build dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt install gnupg ca-certificates
          sudo apt install --no-install-recommends -y libopenjp2-tools
          sudo apt install --no-install-recommends -y rpm
          sudo apt install --no-install-recommends -y libarchive-tools

      - name: Build & release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: pwsh
        run: |
          $sha = (git rev-parse --short HEAD)
          yarn --silent
          $env:SHORT_SHA=$sha; yarn release

      - name: Move artifacts
        id: vars
        shell: pwsh
        run: |
          $sha = (git rev-parse --short HEAD)
          md -p ./dist/artifacts
          Copy-Item ./dist/*.exe -Destination ./dist/artifacts/
          Copy-Item ./dist/*.deb -Destination ./dist/artifacts/
          Copy-Item ./dist/*.tar.gz -Destination ./dist/artifacts/
          $file = Get-ChildItem -Path ./dist/artifacts/ -Filter "*.tar.gz" | select-object -first 1
          $newName = "$($file.BaseName).$($sha)$($file.Extension)"
          Rename-Item -Path $file.FullName -NewName $newName
          $file = Get-ChildItem -Path ./dist/artifacts/ -Filter "*.deb" | select-object -first 1
          $newName = "$($file.BaseName).$($sha)$($file.Extension)"
          Rename-Item -Path $file.FullName -NewName $newName

      - name: Upload artifacts
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ChampR
          path: "./dist/artifacts"

#    - name: Create Release
#      id: create_release
#      uses: actions/create-release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: ${{ github.ref }}
#        release_name: ${{ github.ref }}
#        draft: false
#        prerelease: false

#    - name: Upload Release Assets
#      id: upload_release_assets
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}
#        asset_path: ./dist/artifacts/${{ steps.vars.outputs.fileName }}
#        asset_name: ${{ steps.vars.outputs.fileName }}
#        asset_content_type: application/vnd.microsoft.portable-executable
